
\usepackage{xkeyval}
\makeatletter

\define@key{strips}{negative-preconditions}[1]{\def\@conditiontype{#1}}
\define@key{strips}{disjunctive-preconditions}[2]{\def\@conditiontype{#1}}
\define@key{strips}{conditional-effects}[1]{\def\@usecondeffect{#1}}
\define@key{strips}{action-costs}[1]{\def\@usecost{#1}}
\define@key{strips}{derived-predicates}[1]{\def\@useaxiom{#1}}

\define@key{strips}{lifted}[1]{\def\@lifted{#1}}
\define@key{strips}{examples}[1]{\def\@example{#1}}

\def\conditionset{
\if\@useaxiom0
P
\else
P\cup P_X
\fi
}

\let\satisfies@orig\satisfies

\def\satisfies{
\if\@conditiontype0
\supseteq
\else
\satisfies@orig
\fi
}

\def\condition{
\if\@conditiontype0
\conditionset
\else
\mathcal{F}(\conditionset)
\fi
}

\def\ga{
\if\@lifted0
a
\else
a^{\dagger}
\fi
}

\def\applyformula{
\if\@usecondeffect0
(s \setminus \dele(a)) \cup \adde(a)
\else
(s
 \setminus \braces{e \mid (c \triangleright e) \in \dele(\ga), c\satisfies s})
 \cup      \braces{e \mid (c \triangleright e) \in \adde(\ga), c\satisfies s}
\fi
}

\NewDocumentCommand{\ifexample}{m}{%
\if\@example1%
#1%
\fi%
}



\NewDocumentCommand{\strips}{O{}}{
\def\@useaxiom{0}
\def\@conditiontype{0}
\def\@usecondeffect{0}
\def\@usecost{0}
%
\def\@lifted{0}
\def\@example{0}
%
\setkeys{strips}{#1}%
\if\@lifted1
  \strips@lifted
\else
  \strips@propositional
\fi
}



\newcommand{\strips@propositional}{
%
%
%
%
\if\@conditiontype1
Given a set of propositional variables $V$,
let $\mathcal{F}(V)$ be a propositional formula consisting of $V$ and
logical operations $\braces{\land,\lnot}$.
\fi
\if\@conditiontype2
Given a set of propositional variables $V$,
let $\mathcal{F}(V)$ be a propositional formula consisting of $V$ and
logical operations $\braces{\land,\lor,\lnot}$.
\fi
%
%
%
%
\if\@useaxiom0
%
We define a propositional STRIPS Planning problem
as a 4-tuple $\brackets{P,A,I,G}$
where
 $P$ is a set of propositional variables,
 $A$ is a set of actions,
 $I\subseteq P$ is the initial state, and
 $G\subseteq \conditionset$ is a goal condition.
%
\else
%
We define a propositional STRIPS Planning problem
as a 6-tuple $\brackets{P,A,X,P_X,I,G}$
where
 $P$ is a set of propositions,
 $A$ is a set of actions,
 $X$ is a set of axioms,
 $P_X$ is a set of derived propositions ($P\cap P_X=\emptyset$),
 $I\subset P$ is the initial state, and
 $G\subset \conditionset$ is a goal condition.
%
\fi
%
%
%
%
\if\@usecost0
Each action $a\in A$ is a 3-tuple $\brackets{\pre(a),\adde(a),\dele(a)}$ where
\else
Each action $a\in A$ is a 4-tuple $\brackets{\pre(a),\adde(a),\dele(a),\cost(a)}$ where
$\cost(a) \in \Z$ is a cost,
\fi
%
%
%
%
$\pre(a) \in \condition$ is a precondition and
%
%
%
%
\if\@usecondeffect0
$\adde(a), \dele(a)\in P$ are the add-effects and delete-effects.
\else
$\adde(a), \dele(a)$ are the add-effects and delete-effects.
Each effect is denoted as $c \triangleright e$ where
$c \in \condition$ is an \emph{effect condition} and
$e \in P$.
\fi
%
%
%
%
\if\@useaxiom1
The set of axioms $X$ consists of clauses $f \Rightarrow p$ where
$f \in \condition$ is a body and $p \in P_X$ is a head.
\fi
%
%
%
%
A state $s\subseteq \conditionset$ is a set of true propositions,
an action $a$ is \emph{applicable} when $s \satisfies \pre(a)$ (reads: $s$ \emph{satisfies} $\pre(a)$),
and applying an action $a$ to $s$ yields a new successor state
%
%
%
%
\if\@useaxiom0
$a(s) = \applyformula$.
\else
$a(s)$.
To compute $a(s)$, we first obtain a non-derived state
$a'(s) = \applyformula \setminus P_X $.
Then we perform a fix-point calculation such that
$s \gets s \cup \braces{p \in P_X \mid (f\Rightarrow p)\in X \land s \satisfies f}$
where $s$ is initialized to $a'(s)$.
\fi
}





\newcommand{\strips@lifted}{
%
%
%
%
\if\@conditiontype1
Given a set of propositional variables $V$,
let $\mathcal{F}(V)$ be a propositional formula consisting of $V$ and
logical operations $\braces{\land,\lnot}$.
\fi
\if\@conditiontype2
Given a set of propositional variables $V$,
let $\mathcal{F}(V)$ be a propositional formula consisting of $V$ and
logical operations $\braces{\land,\lor,\lnot}$.
\fi
%
%
%
%
\if\@useaxiom0
%
We denote a lifted STRIPS planning problem
as a 5-tuple $\brackets{O,P,A,I,G}$.
 $O$ is a set of objects\ifexample{ ($\ni\textit{food}$)},
 $P$ is a set of predicates\ifexample{ ($\ni\textit{full}(x)$)}, and
 $A$ is a set of lifted actions\ifexample{ ($\ni\textit{eat}$)}.
%
\else
%
We denote a lifted STRIPS planning problem
as a 7-tuple $\brackets{O,P,P_X,X,A,I,G}$.
 $O$ is a set of objects\ifexample{ ($\ni\textit{food}$)},
 $P$ is a set of predicates\ifexample{ ($\ni\textit{full}(x)$)}, and
 $P_X$ is a set of derived predicates ($P\cap P_X=\emptyset$)\ifexample{, e.g., $\ni\textit{above}$},
 $X$ is a set of axioms\ifexample{ ($\ni\textit{above}(x,y)\land \textit{on}(y,z)\Rightarrow \textit{above}(x,z)$)},
 $A$ is a set of lifted actions\ifexample{ ($\ni\textit{eat}$)}.
%
\fi
%
%
%
%
Each predicate $p\in P$ has an arity $\ar{p}\geq 0$.
Predicates are instantiated/\emph{grounded} into
propositions $P(O)=\bigcup_{p\in P} \parens{\braces{p}\times O\times\overset{\ar{p}}{\ldots}\times O}$
\ifexample{, such as \textit{have(I, food)}},
where $\times$ denotes a Cartesian product of sets.
A state $s\subseteq P(O)$ represents truth assignments to the propositions%
\ifexample{, e.g., $s=\braces{\textit{have(I, food)}}$ represents \textit{have(I, food)} = $\top$}.
% and \textit{full(I)} = $\bot$.
We can also represent it as a bitvector of size $\sum_p O^{\ar{p}}$.
%
%
%
Each lifted action $a(X)\in A$ has an arity $\ar{a}$
and parameters $X=(x_1,\cdots,x_{\ar{a}})$\ifexample{, such as \textit{eat($x_1, x_2$)}}.
%
%
%
%
\if\@usecost0
$a(X)$ is a 3-tuple $\brackets{\pre(a),\adde(a),\dele(a)}$, where
\else
Each action $a\in A$ is a 4-tuple $\brackets{\pre(a),\adde(a),\dele(a),\cost(a)}$ where
$\cost(a) \in \Z$ is a cost,
\fi
%
%
%
%
$\pre(a) \in \condition$ is a precondition and
%
%
%
%
\if\@usecondeffect0
$\adde(a), \dele(a)\in P$ are the add-effects and delete-effects%
\else%
$\adde(a), \dele(a)$ are the add-effects and delete-effects%
\fi%
\ifexample{, e.g., \textit{eat($x_1$, $x_2$)} = $\brackets{\braces{\textit{have}(x_1, x_2)}, \braces{\textit{full}(x_1)}, \braces{\textit{have}(x_1,x_2)}}$}.
%
%
%
%
\if\@usecondeffect1
Each effect is denoted as $c \triangleright e$ where
$c \in \condition$ is an \emph{effect condition} and
$e \in P$.
\fi
%
%
%
%
Lifted actions are instantiated into
\emph{ground actions} $A(O)=\bigcup_{a\in A} \parens{\braces{a}\times O\times\overset{\ar{a}}{\ldots}\times O}$%
\ifexample{, such as $\textit{eat}(\textit{I},\textit{food})$%
%, substituting $x_1,x_2$ with \textit{I}, \textit{food}.
}.
% where $a(o_1,\cdots,o_{\ar{a}})$ substitutes the parameters $(x_1,\cdots,x_{\ar{a}})$ in $a(X)$ with the objects $(o_1,\cdots,o_{\ar{a}})$.
%
%
%
%
\if\@useaxiom1
The set of axioms $X$ consists of clauses $f \Rightarrow p$ where
$f \in \condition$ is a body and $p \in P_X$ is a head.
\fi
%
%
%
%
A state $s\subseteq \conditionset$ is a set of true propositions,
A ground action $\ga\in A(O)$ is \emph{applicable} when $s \satisfies \pre(a)$ (reads: $s$ \emph{satisfies} $\pre(a)$),
and applying an action $\ga$ to $s$ yields a new successor state
%
%
%
%
$\ga(s) = (s \setminus \dele(\ga)) \cup \adde(\ga)$%
\ifexample{, e.g., $\textit{eat}(\textit{I},\textit{food})=$ ``\emph{I can eat a food when I have one, and if I eat one I am full but the food is gone}''}.
Finally,
$I,G\subseteq P(O)$ are the initial state and a goal condition, respectively.
The task of classical planning is to find a \emph{plan} $(\ga_1,\cdots,\ga_n)$
which satisfies $\ga_n \circ \cdots \circ \ga_1(I) \subseteq G$.
%
}


\makeatother
